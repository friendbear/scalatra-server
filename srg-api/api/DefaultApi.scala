/**
 * srg4u Authentication REST API
 * 認証認可側API 必要なのはモデル定義のみ
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package api

import models.AuthRequest
import models.AuthResponse

import java.io.File

import org.scalatra.{ TypedParamSupport, ScalatraServlet }
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{FileUploadSupport, MultipartConfig, SizeConstraintExceededException}

import scala.collection.JavaConverters._

class DefaultApi (implicit val swagger: Swagger) extends ScalatraServlet
    with FileUploadSupport
    with JacksonJsonSupport
    with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "DefaultApi"
  override protected val applicationName: Option[String] = Some("/friendbear/srg-auth/1.0.0/Default")

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val oauth2IntrospectPostOperation = (apiOperation[AuthResponse]("oauth2IntrospectPost")
      summary "アクセストークンの有効性検証を実施する"
      parameters(headerParam[String]("xApiKey").description(""), bodyParam[AuthRequest]("body").description(""))
  )

  post("/oauth2/introspect",operation(oauth2IntrospectPostOperation)) {
    
    
          val xApiKey = request.getHeader("xApiKey")

    println("xApiKey: " + xApiKey)
    
    
          val body = parsedBody.extract[AuthRequest]

    println("body: " + body)
  }

}
